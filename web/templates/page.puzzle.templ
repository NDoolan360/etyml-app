package templates

import "strconv"

templ Puzzle(tree templ.Component, isComplete bool) {
	<div id="tree">
		@tree
	</div>
	<div id="controls">
		if !isComplete {
			<form id="input" hx-boost="true" hx-swap="none" hx-replace-url="true">
				@textbox(nil)
				for _, guess := range(guesses(ctx) ) {
					@hiddenInput("guess", guess)
				}
				for _, guess := range(hints(ctx)) {
					@hiddenInput("hint", guess)
				}
			</form>
		} else {
			@done()
		}
	</div>
	<div id="previous">
		<h2>Guesses</h2>
		<ul id="guesses">
			for _, guess := range(guesses(ctx)) {
				<li>{ guess }</li>
			}
		</ul>
	</div>
}

templ UpdatePuzzle(tree templ.Component, isComplete bool, hintUpdate bool) {
	// replace entire tree
	<div id="tree" hx-swap-oob="innerHTML">
		@tree
	</div>
	if hintUpdate {
		if len(hints(ctx)) > 0 {
			// add to previous hint inputs
			<form id="input" hx-swap-oob="afterend:#textbox">
				@hiddenInput("hint", hints(ctx)[0])
			</form>
		}
	} else {
		// out of band updates
		if len(guesses(ctx)) > 0 {
			// clear textbox
			@textbox(templ.Attributes{"hx-swap-oob": "true"})
			// add to previous guess inputs
			<form id="input" hx-swap-oob="afterend:#textbox">
				@hiddenInput("guess", guesses(ctx)[0])
			</form>
			// add to previous guesses displayed
			<ul id="guesses" hx-swap-oob="afterbegin">
				<li name="guess" value={ guesses(ctx)[0] }>{ guesses(ctx)[0] }</li>
			</ul>
		}
		if isComplete {
			// remove form and show done link
			<div id="controls" hx-swap-oob="innerHTML">
				@done()
			</div>
		}
	}
}

templ textbox(attributes templ.Attributes) {
	<input id="textbox" required autofocus name="guess" { attributes... }/>
}

templ hiddenInput(key string, value string) {
	<input type="hidden" name={ key } value={ value }/>
}

templ done() {
	<a href="/">Done ðŸŽ‰</a>
	<p>Completed in { strconv.Itoa(len(guesses(ctx))) } guesses with { strconv.Itoa(len(hints(ctx))) } hints </p>
}
