package templates

import "strconv"

templ Puzzle(tree templ.Component, isComplete bool) {
	<div id="tree">
		@tree
	</div>
	<div id="controls">
		if !isComplete {
			<form id="input" hx-headers='{"etyml-guess": "true"}'>
				@textbox(nil)
				for _, guess := range(guesses(ctx) ) {
					@hiddenInput("guess", guess)
				}
				for _, hint := range(hints(ctx)) {
					@hiddenInput("hint", hint)
				}
			</form>
		} else {
			@done()
		}
	</div>
	<div id="previous">
		<h2>Guesses</h2>
		<ul id="guesses">
			for _, guess := range(guesses(ctx)) {
				<li>{ guess }</li>
			}
		</ul>
	</div>
}

templ PuzzleUpdate(tree templ.Component, isComplete bool) {
	<div id="tree" hx-swap-oob="innerHTML">
		@tree
	</div>
	if isComplete {
		<div id="controls" hx-swap-oob="innerHTML">
			@done()
		</div>
	}
}

templ GuessUpdate() {
	if len(guesses(ctx)) > 0 {
		@textbox(templ.Attributes{"hx-swap-oob": "true"})
		<form id="input" hx-swap-oob="afterend:#textbox">
			@hiddenInput("guess", guesses(ctx)[0])
		</form>
		<ul id="guesses" hx-swap-oob="afterbegin">
			<li>{ guesses(ctx)[0] }</li>
		</ul>
	}
}

templ HintUpdate() {
	if len(hints(ctx)) > 0 {
		<form id="input" hx-swap-oob="afterend:#textbox">
			@hiddenInput("hint", hints(ctx)[0])
		</form>
	}
}

templ textbox(attributes templ.Attributes) {
	<input id="textbox" required autofocus name="guess" { attributes... }/>
}

templ hiddenInput(key string, value string) {
	<input type="hidden" name={ key } value={ value }/>
}

templ done() {
	<a href="/" hx-boost="false">Done ðŸŽ‰</a>
	<p>Completed in { strconv.Itoa(len(guesses(ctx))) } guesses with { strconv.Itoa(len(hints(ctx))) } hints </p>
}
